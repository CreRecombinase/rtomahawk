# ################################################################
# Copyright (C) 2016-present Genome Research Ltd.
# Author: Marcus D. R. Klarqvist <mk819@cam.ac.uk>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
# ################################################################
ROOT_DIR := $(abspath .)
$(info The compilation root directory is: $(ROOT_DIR))                          
$(info The name of the shared library to be created is: $(SHLIB))               
$(info The place R should look for librcaf_core.so is: $(abspath ./rtomahawk)) 
$(info The place R should look for librcaf_io.so is: $(abspath ./rtomahawk))

CXX_SOURCE := $(wildcard *.cpp)
C_SOURCE   :s= 

OPTFLAGS      = -msse4.2
CXXFLAGS      = -std=c++0x
CFLAGS        = -std=c99
CFLAGS_VENDOR = -std=c99

RCPP_CXXFLAGS := $(shell echo `$(R_HOME)/bin/Rscript -e "Rcpp:::CxxFlags()"`)
RCPP_LDFLAGS := $(shell echo `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"'`) -ltomahawk
R_PATH := $(shell echo `$(R_HOME)/bin/Rscript -e "cat(R.home('include'))"`)

$(info evaluate $(R_PATH))
PKG_CPPFLAGS := $(RCPP_CXXFLAGS) -I$(R_PATH) -I$(abspath ./twk_local/include) -I$(abspath ./twk_local/lib)
PKG_LIBS     := $(RCPP_LDFLAGS) -L$(abspath ./twk_local) -Wl,-rpath,${R_PACKAGE_DIR}/usrlib${R_ARCH}

OBJECTS  = $(CXX_SOURCE:.cpp=.o) $(C_SOURCE:.c=.o)
CPP_DEPS = $(CXX_SOURCE:.cpp=.d) $(C_SOURCE:.c=.d)

.PHONY: all zstd htslib twk clean

all: clean zstd htslib twk $(OBJECTS)
	cp twk_local/libtomahawk.so.0.7.0 libtomahawk.so
	cp htslib/libhts.so .
	cp zstd/lib/libzstd.so.1.3.8 libzstd.so
	mkdir -p "${R_PACKAGE_DIR}/usrlib${R_ARCH}"
	mkdir -p "${R_PACKAGE_DIR}/include/htslib"
	mkdir -p "${R_PACKAGE_DIR}/include/zstd"
	cp *.so "${R_PACKAGE_DIR}/usrlib${R_ARCH}"
	cp htslib/htslib/*.h "${R_PACKAGE_DIR}/include/htslib"
	cp zstd/lib/zstd.h "${R_PACKAGE_DIR}/include/zstd"
	cp zstd/lib/dictBuilder/zdict.h "${R_PACKAGE_DIR}/include/zstd"
	cp zstd/lib/deprecated/zbuff.h "${R_PACKAGE_DIR}/include/zstd"
	cp zstd/lib/common/zstd_errors.h "${R_PACKAGE_DIR}/include/zstd"
	ln -s ${R_PACKAGE_DIR}/usrlib${R_ARCH}/libhts.so ${R_PACKAGE_DIR}/usrlib${R_ARCH}/libhts.so.2to3part2

%.o: %.cpp
	g++ -std=c++0x $(OPTFLAGS) $(PKG_CPPFLAGS) -fpic -c -o $@ $<	
	
zstd:
	cd zstd && $(MAKE) default

htslib:
	cd htslib && $(MAKE)

twk:
	cd twk_local && $(MAKE)
	
clean:
	rm -f libtomahawk.so $(OBJECTS) $(CPP_DEPS) $(SHLIB)